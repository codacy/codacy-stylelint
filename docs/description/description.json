[ {
  "patternId" : "property-no-unknown",
  "title" : "Disallow unknown properties.",
  "parameters" : [ {
    "name" : "property-no-unknown",
    "description" : "property-no-unknown"
  } ]
}, {
  "patternId" : "at-rule-disallowed-list",
  "title" : "Specify a list of disallowed at-rules.",
  "parameters" : [ {
    "name" : "at-rule-disallowed-list",
    "description" : "at-rule-disallowed-list"
  } ]
}, {
  "patternId" : "scss_at-else-closing-brace-space-after",
  "title" : "Require a single space or disallow whitespace after the closing brace of `@else` statements.",
  "parameters" : [ {
    "name" : "at-else-closing-brace-space-after",
    "description" : "at-else-closing-brace-space-after"
  } ]
}, {
  "patternId" : "no-irregular-whitespace",
  "title" : "Disallow irregular whitespaces.",
  "parameters" : [ {
    "name" : "no-irregular-whitespace",
    "description" : "no-irregular-whitespace"
  } ]
}, {
  "patternId" : "scss_at-else-empty-line-before",
  "title" : "Require an empty line or disallow empty lines before `@`-else.",
  "parameters" : [ {
    "name" : "at-else-empty-line-before",
    "description" : "at-else-empty-line-before"
  } ]
}, {
  "patternId" : "scss_at-mixin-no-risky-nesting-selector",
  "title" : "Disallow risky nesting selectors within a mixin.",
  "parameters" : [ {
    "name" : "at-mixin-no-risky-nesting-selector",
    "description" : "at-mixin-no-risky-nesting-selector"
  } ]
}, {
  "patternId" : "selector-class-pattern",
  "title" : "Specify a pattern for class selectors.",
  "parameters" : [ {
    "name" : "selector-class-pattern",
    "description" : "selector-class-pattern"
  } ]
}, {
  "patternId" : "no-invalid-double-slash-comments",
  "title" : "Disallow invalid double-slash comments.",
  "parameters" : [ {
    "name" : "no-invalid-double-slash-comments",
    "description" : "no-invalid-double-slash-comments"
  } ]
}, {
  "patternId" : "selector-pseudo-element-disallowed-list",
  "title" : "Specify a list of disallowed pseudo-element selectors.",
  "parameters" : [ {
    "name" : "selector-pseudo-element-disallowed-list",
    "description" : "selector-pseudo-element-disallowed-list"
  } ]
}, {
  "patternId" : "comment-word-disallowed-list",
  "title" : "Specify a list of disallowed words within comments.",
  "parameters" : [ {
    "name" : "comment-word-disallowed-list",
    "description" : "comment-word-disallowed-list"
  } ]
}, {
  "patternId" : "font-size-is-readable",
  "title" : "Disallow font sizes less than 15px (or 11.25pt).",
  "parameters" : [ {
    "name" : "font-size-is-readable",
    "description" : "font-size-is-readable"
  } ]
}, {
  "patternId" : "font-family-no-missing-generic-family-keyword",
  "title" : "Disallow a missing generic family keyword within font families.",
  "parameters" : [ {
    "name" : "font-family-no-missing-generic-family-keyword",
    "description" : "font-family-no-missing-generic-family-keyword"
  } ]
}, {
  "patternId" : "selector-attribute-operator-disallowed-list",
  "title" : "Specify a list of disallowed attribute operators.",
  "parameters" : [ {
    "name" : "selector-attribute-operator-disallowed-list",
    "description" : "selector-attribute-operator-disallowed-list"
  } ]
}, {
  "patternId" : "lightness-notation",
  "title" : "Specify number or percentage notation for lightness.",
  "parameters" : [ {
    "name" : "lightness-notation",
    "description" : "lightness-notation"
  } ]
}, {
  "patternId" : "scss_at-mixin-pattern",
  "title" : "Specify a pattern for Sass/SCSS-like mixin names.",
  "parameters" : [ {
    "name" : "at-mixin-pattern",
    "description" : "at-mixin-pattern"
  } ]
}, {
  "patternId" : "selector-pseudo-element-no-unknown",
  "title" : "Disallow unknown pseudo-element selectors.",
  "parameters" : [ {
    "name" : "selector-pseudo-element-no-unknown",
    "description" : "selector-pseudo-element-no-unknown"
  } ]
}, {
  "patternId" : "value-no-vendor-prefix",
  "title" : "Disallow vendor prefixes for values.",
  "parameters" : [ {
    "name" : "value-no-vendor-prefix",
    "description" : "value-no-vendor-prefix"
  } ]
}, {
  "patternId" : "scss_at-if-closing-brace-newline-after",
  "title" : "Require or disallow a newline after the closing brace of `@if` statements.",
  "parameters" : [ {
    "name" : "at-if-closing-brace-newline-after",
    "description" : "at-if-closing-brace-newline-after"
  } ]
}, {
  "patternId" : "keyframes-name-pattern",
  "title" : "Specify a pattern for keyframe names.",
  "parameters" : [ {
    "name" : "keyframes-name-pattern",
    "description" : "keyframes-name-pattern"
  } ]
}, {
  "patternId" : "scss_function-quote-no-quoted-strings-inside",
  "title" : "Disallow quoted strings inside the quote function",
  "parameters" : [ {
    "name" : "function-quote-no-quoted-strings-inside",
    "description" : "function-quote-no-quoted-strings-inside"
  } ]
}, {
  "patternId" : "scss_dollar-variable-first-in-block",
  "title" : "Require `$`-variable declarations to be placed first in a block (root or a rule).",
  "parameters" : [ {
    "name" : "dollar-variable-first-in-block",
    "description" : "dollar-variable-first-in-block"
  } ]
}, {
  "patternId" : "scss_block-no-redundant-nesting",
  "title" : "Disallow nesting a single block if it could be merged with its parent block.",
  "parameters" : [ {
    "name" : "block-no-redundant-nesting",
    "description" : "block-no-redundant-nesting"
  } ]
}, {
  "patternId" : "declaration-block-no-duplicate-custom-properties",
  "title" : "Disallow duplicate custom properties within declaration blocks.",
  "parameters" : [ {
    "name" : "declaration-block-no-duplicate-custom-properties",
    "description" : "declaration-block-no-duplicate-custom-properties"
  } ]
}, {
  "patternId" : "function-disallowed-list",
  "title" : "Specify a list of disallowed functions.",
  "parameters" : [ {
    "name" : "function-disallowed-list",
    "description" : "function-disallowed-list"
  } ]
}, {
  "patternId" : "selector-combinator-allowed-list",
  "title" : "Specify a list of allowed combinators.",
  "parameters" : [ {
    "name" : "selector-combinator-allowed-list",
    "description" : "selector-combinator-allowed-list"
  } ]
}, {
  "patternId" : "selector-attribute-quotes",
  "title" : "Require or disallow quotes for attribute values.",
  "parameters" : [ {
    "name" : "selector-attribute-quotes",
    "description" : "selector-attribute-quotes"
  } ]
}, {
  "patternId" : "import-notation",
  "title" : "Specify string or URL notation for `@import` rules.",
  "parameters" : [ {
    "name" : "import-notation",
    "description" : "import-notation"
  } ]
}, {
  "patternId" : "shorthand-property-no-redundant-values",
  "title" : "Disallow redundant values within shorthand properties.",
  "parameters" : [ {
    "name" : "shorthand-property-no-redundant-values",
    "description" : "shorthand-property-no-redundant-values"
  } ]
}, {
  "patternId" : "scss_no-global-function-names",
  "title" : "Disallows the use of global function names, as these global functions are now located inside built-in Sass modules.",
  "parameters" : [ {
    "name" : "no-global-function-names",
    "description" : "no-global-function-names"
  } ]
}, {
  "patternId" : "no-unknown-custom-media",
  "title" : "Disallow unknown custom media queries.",
  "parameters" : [ {
    "name" : "no-unknown-custom-media",
    "description" : "no-unknown-custom-media"
  } ]
}, {
  "patternId" : "scss_load-no-partial-leading-underscore",
  "title" : "Disallow leading underscore in partial names in `@import`, `@use`, `@forward`, and `meta.load-css` `$url` parameter.",
  "parameters" : [ {
    "name" : "load-no-partial-leading-underscore",
    "description" : "load-no-partial-leading-underscore"
  } ]
}, {
  "patternId" : "selector-max-id",
  "title" : "Limit the number of ID selectors in a selector.",
  "parameters" : [ {
    "name" : "selector-max-id",
    "description" : "selector-max-id"
  } ]
}, {
  "patternId" : "property-disallowed-list",
  "title" : "Specify a list of disallowed properties.",
  "parameters" : [ {
    "name" : "property-disallowed-list",
    "description" : "property-disallowed-list"
  } ]
}, {
  "patternId" : "no-invalid-position-at-import-rule",
  "title" : "Disallow invalid position `@import` rules.",
  "parameters" : [ {
    "name" : "no-invalid-position-at-import-rule",
    "description" : "no-invalid-position-at-import-rule"
  } ]
}, {
  "patternId" : "max-nesting-depth",
  "title" : "Limit the depth of nesting.",
  "parameters" : [ {
    "name" : "max-nesting-depth",
    "description" : "max-nesting-depth"
  } ]
}, {
  "patternId" : "custom-property-no-missing-var-function",
  "title" : "Disallow missing `var` function for custom properties.",
  "parameters" : [ {
    "name" : "custom-property-no-missing-var-function",
    "description" : "custom-property-no-missing-var-function"
  } ]
}, {
  "patternId" : "scss_map-keys-quotes",
  "title" : "Require quoted keys in Sass maps.",
  "parameters" : [ {
    "name" : "map-keys-quotes",
    "description" : "map-keys-quotes"
  } ]
}, {
  "patternId" : "at-rule-allowed-list",
  "title" : "Specify a list of allowed at-rules.",
  "parameters" : [ {
    "name" : "at-rule-allowed-list",
    "description" : "at-rule-allowed-list"
  } ]
}, {
  "patternId" : "declaration-block-single-line-max-declarations",
  "title" : "Limit the number of declarations within a single-line declaration block.",
  "parameters" : [ {
    "name" : "declaration-block-single-line-max-declarations",
    "description" : "declaration-block-single-line-max-declarations"
  } ]
}, {
  "patternId" : "selector-max-specificity",
  "title" : "Limit the specificity of selectors.",
  "parameters" : [ {
    "name" : "selector-max-specificity",
    "description" : "selector-max-specificity"
  } ]
}, {
  "patternId" : "scss_selector-no-union-class-name",
  "title" : "Disallow union class names with the parent selector (`&`).",
  "parameters" : [ {
    "name" : "selector-no-union-class-name",
    "description" : "selector-no-union-class-name"
  } ]
}, {
  "patternId" : "declaration-property-max-values",
  "title" : "Limit the number of values for a list of properties within declarations.",
  "parameters" : [ {
    "name" : "declaration-property-max-values",
    "description" : "declaration-property-max-values"
  } ]
}, {
  "patternId" : "scss_load-partial-extension",
  "title" : "Require or disallow extension in `@import`, `@use`, `@forward`, and [`meta.load-css`] commands.",
  "parameters" : [ {
    "name" : "load-partial-extension",
    "description" : "load-partial-extension"
  } ]
}, {
  "patternId" : "rule-selector-property-disallowed-list",
  "title" : "Specify a list of disallowed properties for selectors within rules.",
  "parameters" : [ {
    "name" : "rule-selector-property-disallowed-list",
    "description" : "rule-selector-property-disallowed-list"
  } ]
}, {
  "patternId" : "media-prefers-color-scheme",
  "title" : "Require implementation of certain styles for selectors with colors.",
  "parameters" : [ {
    "name" : "media-prefers-color-scheme",
    "description" : "media-prefers-color-scheme"
  } ]
}, {
  "patternId" : "scss_at-else-if-parentheses-space-before",
  "title" : "Require or disallow a space before `@else if` parentheses.",
  "parameters" : [ {
    "name" : "at-else-if-parentheses-space-before",
    "description" : "at-else-if-parentheses-space-before"
  } ]
}, {
  "patternId" : "scss_at-import-no-partial-leading-underscore",
  "title" : "Disallow leading underscore in partial names in `@import`.",
  "parameters" : [ {
    "name" : "at-import-no-partial-leading-underscore",
    "description" : "at-import-no-partial-leading-underscore"
  } ]
}, {
  "patternId" : "no-spread-text",
  "title" : "Require width of text greater than 45 characters and less than 80 characters.",
  "parameters" : [ {
    "name" : "no-spread-text",
    "description" : "no-spread-text"
  } ]
}, {
  "patternId" : "media-feature-name-no-unknown",
  "title" : "Disallow unknown media feature names.",
  "parameters" : [ {
    "name" : "media-feature-name-no-unknown",
    "description" : "media-feature-name-no-unknown"
  } ]
}, {
  "patternId" : "scss_at-use-no-redundant-alias",
  "title" : "Disallow redundant namespace aliases.",
  "parameters" : [ {
    "name" : "at-use-no-redundant-alias",
    "description" : "at-use-no-redundant-alias"
  } ]
}, {
  "patternId" : "media-feature-name-disallowed-list",
  "title" : "Specify a list of disallowed media feature names.",
  "parameters" : [ {
    "name" : "media-feature-name-disallowed-list",
    "description" : "media-feature-name-disallowed-list"
  } ]
}, {
  "patternId" : "color-hex-length",
  "title" : "Specify short or long notation for hex colors.",
  "parameters" : [ {
    "name" : "color-hex-length",
    "description" : "color-hex-length"
  } ]
}, {
  "patternId" : "selector-pseudo-class-focus",
  "title" : "Checks the presence of a pseudo-class for selectors with `:hover`.",
  "parameters" : [ {
    "name" : "selector-pseudo-class-focus",
    "description" : "selector-pseudo-class-focus"
  } ]
}, {
  "patternId" : "scss_at-import-partial-extension-allowed-list",
  "title" : "Specify a list of allowed file extensions for partial names in `@import` commands.",
  "parameters" : [ {
    "name" : "at-import-partial-extension-allowed-list",
    "description" : "at-import-partial-extension-allowed-list"
  } ]
}, {
  "patternId" : "no-display-none",
  "title" : "Sources that will help you do without `{ display: none; }` and hide the content:",
  "parameters" : [ {
    "name" : "no-display-none",
    "description" : "no-display-none"
  } ]
}, {
  "patternId" : "declaration-block-no-redundant-longhand-properties",
  "title" : "Disallow redundant longhand properties within declaration-block.",
  "parameters" : [ {
    "name" : "declaration-block-no-redundant-longhand-properties",
    "description" : "declaration-block-no-redundant-longhand-properties"
  } ]
}, {
  "patternId" : "font-family-name-quotes",
  "title" : "Require or disallow quotes for font family names.",
  "parameters" : [ {
    "name" : "font-family-name-quotes",
    "description" : "font-family-name-quotes"
  } ]
}, {
  "patternId" : "scss_double-slash-comment-empty-line-before",
  "title" : "Require or disallow an empty line before `//`-comments.",
  "parameters" : [ {
    "name" : "double-slash-comment-empty-line-before",
    "description" : "double-slash-comment-empty-line-before"
  } ]
}, {
  "patternId" : "selector-pseudo-element-colon-notation",
  "title" : "Specify single or double colon notation for applicable pseudo-element selectors.",
  "parameters" : [ {
    "name" : "selector-pseudo-element-colon-notation",
    "description" : "selector-pseudo-element-colon-notation"
  } ]
}, {
  "patternId" : "scss_at-use-no-unnamespaced",
  "title" : "Disallow usage of `@use` without a namespace.",
  "parameters" : [ {
    "name" : "at-use-no-unnamespaced",
    "description" : "at-use-no-unnamespaced"
  } ]
}, {
  "patternId" : "media-feature-name-no-vendor-prefix",
  "title" : "Disallow vendor prefixes for media feature names.",
  "parameters" : [ {
    "name" : "media-feature-name-no-vendor-prefix",
    "description" : "media-feature-name-no-vendor-prefix"
  } ]
}, {
  "patternId" : "scss_at-function-named-arguments",
  "title" : "Require named parameters in SCSS function call rule.",
  "parameters" : [ {
    "name" : "at-function-named-arguments",
    "description" : "at-function-named-arguments"
  } ]
}, {
  "patternId" : "no-duplicate-at-import-rules",
  "title" : "Disallow duplicate `@import` rules.",
  "parameters" : [ {
    "name" : "no-duplicate-at-import-rules",
    "description" : "no-duplicate-at-import-rules"
  } ]
}, {
  "patternId" : "media-feature-name-unit-allowed-list",
  "title" : "Specify a list of allowed name and unit pairs within media features.",
  "parameters" : [ {
    "name" : "media-feature-name-unit-allowed-list",
    "description" : "media-feature-name-unit-allowed-list"
  } ]
}, {
  "patternId" : "selector-type-no-unknown",
  "title" : "Disallow unknown type selectors.",
  "parameters" : [ {
    "name" : "selector-type-no-unknown",
    "description" : "selector-type-no-unknown"
  } ]
}, {
  "patternId" : "property-no-vendor-prefix",
  "title" : "Disallow vendor prefixes for properties.",
  "parameters" : [ {
    "name" : "property-no-vendor-prefix",
    "description" : "property-no-vendor-prefix"
  } ]
}, {
  "patternId" : "scss_dimension-no-non-numeric-values",
  "title" : "Interpolating a value with a unit (e.g. `#{$value}px`) results in a\n_string_ value, not as numeric value. This value then cannot be used in\nnumerical operations.  It is better to use arithmetic to apply a unit to a\nnumber (e.g. `$value * 1px`).",
  "parameters" : [ {
    "name" : "dimension-no-non-numeric-values",
    "description" : "dimension-no-non-numeric-values"
  } ]
}, {
  "patternId" : "scss_dollar-variable-empty-line-before",
  "title" : "Require an empty line or disallow empty lines before `$`-variable declarations.",
  "parameters" : [ {
    "name" : "dollar-variable-empty-line-before",
    "description" : "dollar-variable-empty-line-before"
  } ]
}, {
  "patternId" : "keyframe-declaration-no-important",
  "title" : "Disallow invalid `!important` within keyframe declarations.",
  "parameters" : [ {
    "name" : "keyframe-declaration-no-important",
    "description" : "keyframe-declaration-no-important"
  } ]
}, {
  "patternId" : "scss_at-mixin-named-arguments",
  "title" : "Require named parameters in at-mixin call rule.",
  "parameters" : [ {
    "name" : "at-mixin-named-arguments",
    "description" : "at-mixin-named-arguments"
  } ]
}, {
  "patternId" : "property-allowed-list",
  "title" : "Specify a list of allowed properties.",
  "parameters" : [ {
    "name" : "property-allowed-list",
    "description" : "property-allowed-list"
  } ]
}, {
  "patternId" : "rule-empty-line-before",
  "title" : "Require or disallow an empty line before rules.",
  "parameters" : [ {
    "name" : "rule-empty-line-before",
    "description" : "rule-empty-line-before"
  } ]
}, {
  "patternId" : "selector-pseudo-class-no-unknown",
  "title" : "Disallow unknown pseudo-class selectors.",
  "parameters" : [ {
    "name" : "selector-pseudo-class-no-unknown",
    "description" : "selector-pseudo-class-no-unknown"
  } ]
}, {
  "patternId" : "function-calc-no-unspaced-operator",
  "title" : "Disallow invalid unspaced operator within math functions, such as `calc()` or `min()`.",
  "parameters" : [ {
    "name" : "function-calc-no-unspaced-operator",
    "description" : "function-calc-no-unspaced-operator"
  } ]
}, {
  "patternId" : "scss_declaration-nested-properties-no-divided-groups",
  "title" : "Disallow nested properties of the same \"namespace\" be divided into multiple groups.",
  "parameters" : [ {
    "name" : "declaration-nested-properties-no-divided-groups",
    "description" : "declaration-nested-properties-no-divided-groups"
  } ]
}, {
  "patternId" : "color-hex-alpha",
  "title" : "Require or disallow alpha channel for hex colors.",
  "parameters" : [ {
    "name" : "color-hex-alpha",
    "description" : "color-hex-alpha"
  } ]
}, {
  "patternId" : "number-max-precision",
  "title" : "Limit the number of decimal places allowed in numbers.",
  "parameters" : [ {
    "name" : "number-max-precision",
    "description" : "number-max-precision"
  } ]
}, {
  "patternId" : "function-url-no-scheme-relative",
  "title" : "Disallow scheme-relative urls.",
  "parameters" : [ {
    "name" : "function-url-no-scheme-relative",
    "description" : "function-url-no-scheme-relative"
  } ]
}, {
  "patternId" : "selector-id-pattern",
  "title" : "Specify a pattern for ID selectors.",
  "parameters" : [ {
    "name" : "selector-id-pattern",
    "description" : "selector-id-pattern"
  } ]
}, {
  "patternId" : "selector-nested-pattern",
  "title" : "Specify a pattern for the selectors of rules nested within rules.",
  "parameters" : [ {
    "name" : "selector-nested-pattern",
    "description" : "selector-nested-pattern"
  } ]
}, {
  "patternId" : "scss_at-import-partial-extension",
  "title" : "Require or disallow extension in `@import` commands.",
  "parameters" : [ {
    "name" : "at-import-partial-extension",
    "description" : "at-import-partial-extension"
  } ]
}, {
  "patternId" : "scss_declaration-nested-properties",
  "title" : "Require or disallow properties with `-` in their names to be in a form of a nested group.",
  "parameters" : [ {
    "name" : "declaration-nested-properties",
    "description" : "declaration-nested-properties"
  } ]
}, {
  "patternId" : "scss_at-each-key-value-single-line",
  "title" : "This is a rule that checks for situations where users have:",
  "parameters" : [ {
    "name" : "at-each-key-value-single-line",
    "description" : "at-each-key-value-single-line"
  } ]
}, {
  "patternId" : "no-empty-source",
  "title" : "Disallow empty sources.",
  "parameters" : [ {
    "name" : "no-empty-source",
    "description" : "no-empty-source"
  } ]
}, {
  "patternId" : "selector-max-type",
  "title" : "Limit the number of type selectors in a selector.",
  "parameters" : [ {
    "name" : "selector-max-type",
    "description" : "selector-max-type"
  } ]
}, {
  "patternId" : "scss_at-root-no-redundant",
  "title" : "Disallow redundant `@at-root` rule.",
  "parameters" : [ {
    "name" : "at-root-no-redundant",
    "description" : "at-root-no-redundant"
  } ]
}, {
  "patternId" : "content-property-no-static-value",
  "title" : "Disallow CSS generated content except aria-label attribute content and empty strings.",
  "parameters" : [ {
    "name" : "content-property-no-static-value",
    "description" : "content-property-no-static-value"
  } ]
}, {
  "patternId" : "at-rule-empty-line-before",
  "title" : "Require or disallow an empty line before at-rules.",
  "parameters" : [ {
    "name" : "at-rule-empty-line-before",
    "description" : "at-rule-empty-line-before"
  } ]
}, {
  "patternId" : "function-url-quotes",
  "title" : "Require or disallow quotes for urls.",
  "parameters" : [ {
    "name" : "function-url-quotes",
    "description" : "function-url-quotes"
  } ]
}, {
  "patternId" : "selector-max-attribute",
  "title" : "Limit the number of attribute selectors in a selector.",
  "parameters" : [ {
    "name" : "selector-max-attribute",
    "description" : "selector-max-attribute"
  } ]
}, {
  "patternId" : "selector-anb-no-unmatchable",
  "title" : "Disallow unmatchable An+B selectors.",
  "parameters" : [ {
    "name" : "selector-anb-no-unmatchable",
    "description" : "selector-anb-no-unmatchable"
  } ]
}, {
  "patternId" : "selector-max-combinators",
  "title" : "Limit the number of combinators in a selector.",
  "parameters" : [ {
    "name" : "selector-max-combinators",
    "description" : "selector-max-combinators"
  } ]
}, {
  "patternId" : "color-no-hex",
  "title" : "Disallow hex colors.",
  "parameters" : [ {
    "name" : "color-no-hex",
    "description" : "color-no-hex"
  } ]
}, {
  "patternId" : "function-no-unknown",
  "title" : "Disallow unknown functions.",
  "parameters" : [ {
    "name" : "function-no-unknown",
    "description" : "function-no-unknown"
  } ]
}, {
  "patternId" : "scss_function-color-relative",
  "title" : "Encourage the use of the scale-color over:",
  "parameters" : [ {
    "name" : "function-color-relative",
    "description" : "function-color-relative"
  } ]
}, {
  "patternId" : "scss_operator-no-newline-before",
  "title" : "Disallow linebreaks before Sass operators.",
  "parameters" : [ {
    "name" : "operator-no-newline-before",
    "description" : "operator-no-newline-before"
  } ]
}, {
  "patternId" : "color-no-invalid-hex",
  "title" : "Disallow invalid hex colors.",
  "parameters" : [ {
    "name" : "color-no-invalid-hex",
    "description" : "color-no-invalid-hex"
  } ]
}, {
  "patternId" : "scss_at-if-closing-brace-space-after",
  "title" : "Require a single space or disallow whitespace after the closing brace of `@if` statements.",
  "parameters" : [ {
    "name" : "at-if-closing-brace-space-after",
    "description" : "at-if-closing-brace-space-after"
  } ]
}, {
  "patternId" : "line-height-is-vertical-rhythmed",
  "title" : "Disallow not vertical rhythmed line-height.",
  "parameters" : [ {
    "name" : "line-height-is-vertical-rhythmed",
    "description" : "line-height-is-vertical-rhythmed"
  } ]
}, {
  "patternId" : "media-prefers-reduced-motion",
  "title" : "Require certain styles if the animation or transition in media features.",
  "parameters" : [ {
    "name" : "media-prefers-reduced-motion",
    "description" : "media-prefers-reduced-motion"
  } ]
}, {
  "patternId" : "scss_operator-no-newline-after",
  "title" : "Disallow linebreaks after Sass operators.",
  "parameters" : [ {
    "name" : "operator-no-newline-after",
    "description" : "operator-no-newline-after"
  } ]
}, {
  "patternId" : "selector-type-case",
  "title" : "Specify lowercase or uppercase for type selectors.",
  "parameters" : [ {
    "name" : "selector-type-case",
    "description" : "selector-type-case"
  } ]
}, {
  "patternId" : "no-obsolete-attribute",
  "title" : "Disallow obsolete attribute using.",
  "parameters" : [ {
    "name" : "no-obsolete-attribute",
    "description" : "no-obsolete-attribute"
  } ]
}, {
  "patternId" : "scss_at-mixin-argumentless-call-parentheses",
  "title" : "Require or disallow parentheses in argumentless `@mixin` calls.",
  "parameters" : [ {
    "name" : "at-mixin-argumentless-call-parentheses",
    "description" : "at-mixin-argumentless-call-parentheses"
  } ]
}, {
  "patternId" : "scss_media-feature-value-dollar-variable",
  "title" : "Require a media feature value be a `$`-variable or disallow `$`-variables in media feature values.",
  "parameters" : [ {
    "name" : "media-feature-value-dollar-variable",
    "description" : "media-feature-value-dollar-variable"
  } ]
}, {
  "patternId" : "selector-attribute-operator-allowed-list",
  "title" : "Specify a list of allowed attribute operators.",
  "parameters" : [ {
    "name" : "selector-attribute-operator-allowed-list",
    "description" : "selector-attribute-operator-allowed-list"
  } ]
}, {
  "patternId" : "selector-disallowed-list",
  "title" : "Specify a list of disallowed selectors.",
  "parameters" : [ {
    "name" : "selector-disallowed-list",
    "description" : "selector-disallowed-list"
  } ]
}, {
  "patternId" : "unit-disallowed-list",
  "title" : "Specify a list of disallowed units.",
  "parameters" : [ {
    "name" : "unit-disallowed-list",
    "description" : "unit-disallowed-list"
  } ]
}, {
  "patternId" : "media-feature-range-notation",
  "title" : "Specify context or prefix notation for media feature ranges.",
  "parameters" : [ {
    "name" : "media-feature-range-notation",
    "description" : "media-feature-range-notation"
  } ]
}, {
  "patternId" : "string-no-newline",
  "title" : "Disallow invalid newlines within strings.",
  "parameters" : [ {
    "name" : "string-no-newline",
    "description" : "string-no-newline"
  } ]
}, {
  "patternId" : "selector-max-class",
  "title" : "Limit the number of classes in a selector.",
  "parameters" : [ {
    "name" : "selector-max-class",
    "description" : "selector-max-class"
  } ]
}, {
  "patternId" : "declaration-property-value-disallowed-list",
  "title" : "Specify a list of disallowed property and value pairs within declarations.",
  "parameters" : [ {
    "name" : "declaration-property-value-disallowed-list",
    "description" : "declaration-property-value-disallowed-list"
  } ]
}, {
  "patternId" : "no-unknown-custom-properties",
  "title" : "Disallow unknown custom properties.",
  "parameters" : [ {
    "name" : "no-unknown-custom-properties",
    "description" : "no-unknown-custom-properties"
  } ]
}, {
  "patternId" : "scss_function-unquote-no-unquoted-strings-inside",
  "title" : "Disallow unquoted strings inside the unquote function",
  "parameters" : [ {
    "name" : "function-unquote-no-unquoted-strings-inside",
    "description" : "function-unquote-no-unquoted-strings-inside"
  } ]
}, {
  "patternId" : "no-text-align-justify",
  "title" : "Disallow `{ text-align: justify; }` anywhere.",
  "parameters" : [ {
    "name" : "no-text-align-justify",
    "description" : "no-text-align-justify"
  } ]
}, {
  "patternId" : "comment-no-empty",
  "title" : "Disallow empty comments.",
  "parameters" : [ {
    "name" : "comment-no-empty",
    "description" : "comment-no-empty"
  } ]
}, {
  "patternId" : "scss_partial-no-import",
  "title" : "Disallow non-CSS `@import`s in partial files.",
  "parameters" : [ {
    "name" : "partial-no-import",
    "description" : "partial-no-import"
  } ]
}, {
  "patternId" : "selector-max-compound-selectors",
  "title" : "Limit the number of compound selectors in a selector.",
  "parameters" : [ {
    "name" : "selector-max-compound-selectors",
    "description" : "selector-max-compound-selectors"
  } ]
}, {
  "patternId" : "at-rule-property-required-list",
  "title" : "Specify a list of required properties for an at-rule.",
  "parameters" : [ {
    "name" : "at-rule-property-required-list",
    "description" : "at-rule-property-required-list"
  } ]
}, {
  "patternId" : "declaration-property-value-no-unknown",
  "title" : "Disallow unknown values for properties within declarations.",
  "parameters" : [ {
    "name" : "declaration-property-value-no-unknown",
    "description" : "declaration-property-value-no-unknown"
  } ]
}, {
  "patternId" : "scss_selector-no-redundant-nesting-selector",
  "title" : "Disallow redundant nesting selectors (`&`).",
  "parameters" : [ {
    "name" : "selector-no-redundant-nesting-selector",
    "description" : "selector-no-redundant-nesting-selector"
  } ]
}, {
  "patternId" : "scss_function-calculation-no-interpolation",
  "title" : "Disallow interpolation in `calc()`, `clamp()`, `min()`, and `max()` functions.",
  "parameters" : [ {
    "name" : "function-calculation-no-interpolation",
    "description" : "function-calculation-no-interpolation"
  } ]
}, {
  "patternId" : "function-url-scheme-allowed-list",
  "title" : "Specify a list of allowed URL schemes.",
  "parameters" : [ {
    "name" : "function-url-scheme-allowed-list",
    "description" : "function-url-scheme-allowed-list"
  } ]
}, {
  "patternId" : "hue-degree-notation",
  "title" : "Specify number or angle notation for degree hues.",
  "parameters" : [ {
    "name" : "hue-degree-notation",
    "description" : "hue-degree-notation"
  } ]
}, {
  "patternId" : "block-no-empty",
  "title" : "Disallow empty blocks.",
  "parameters" : [ {
    "name" : "block-no-empty",
    "description" : "block-no-empty"
  } ]
}, {
  "patternId" : "scss_dollar-variable-pattern",
  "title" : "Specify a pattern for Sass-like variables.",
  "parameters" : [ {
    "name" : "dollar-variable-pattern",
    "description" : "dollar-variable-pattern"
  } ]
}, {
  "patternId" : "scss_selector-nest-combinators",
  "title" : "Require or disallow nesting of combinators in selectors",
  "parameters" : [ {
    "name" : "selector-nest-combinators",
    "description" : "selector-nest-combinators"
  } ]
}, {
  "patternId" : "scss_declaration-property-value-no-unknown",
  "title" : "Disallow unknown values for properties within declarations.",
  "parameters" : [ {
    "name" : "declaration-property-value-no-unknown",
    "description" : "declaration-property-value-no-unknown"
  } ]
}, {
  "patternId" : "function-name-case",
  "title" : "Specify lowercase or uppercase for function names.",
  "parameters" : [ {
    "name" : "function-name-case",
    "description" : "function-name-case"
  } ]
}, {
  "patternId" : "unit-allowed-list",
  "title" : "Specify a list of allowed units.",
  "parameters" : [ {
    "name" : "unit-allowed-list",
    "description" : "unit-allowed-list"
  } ]
}, {
  "patternId" : "scss_property-no-unknown",
  "title" : "Disallow unknown properties. Should be used instead of Stylelint's property-no-unknown.",
  "parameters" : [ {
    "name" : "property-no-unknown",
    "description" : "property-no-unknown"
  } ]
}, {
  "patternId" : "scss_at-if-no-null",
  "title" : "Check for equality to null is unnecessarily explicit since `null` is falsey in Sass.",
  "parameters" : [ {
    "name" : "at-if-no-null",
    "description" : "at-if-no-null"
  } ]
}, {
  "patternId" : "length-zero-no-unit",
  "title" : "Disallow units for zero lengths.",
  "parameters" : [ {
    "name" : "length-zero-no-unit",
    "description" : "length-zero-no-unit"
  } ]
}, {
  "patternId" : "media-query-no-invalid",
  "title" : "Disallow invalid media queries.",
  "parameters" : [ {
    "name" : "media-query-no-invalid",
    "description" : "media-query-no-invalid"
  } ]
}, {
  "patternId" : "function-url-scheme-disallowed-list",
  "title" : "Specify a list of disallowed URL schemes.",
  "parameters" : [ {
    "name" : "function-url-scheme-disallowed-list",
    "description" : "function-url-scheme-disallowed-list"
  } ]
}, {
  "patternId" : "scss_at-else-closing-brace-newline-after",
  "title" : "Require or disallow a newline after the closing brace of `@else` statements.",
  "parameters" : [ {
    "name" : "at-else-closing-brace-newline-after",
    "description" : "at-else-closing-brace-newline-after"
  } ]
}, {
  "patternId" : "scss_dollar-variable-empty-line-after",
  "title" : "Require an empty line or disallow empty lines after `$`-variable declarations.",
  "parameters" : [ {
    "name" : "dollar-variable-empty-line-after",
    "description" : "dollar-variable-empty-line-after"
  } ]
}, {
  "patternId" : "value-keyword-case",
  "title" : "Specify lowercase or uppercase for keywords values.",
  "parameters" : [ {
    "name" : "value-keyword-case",
    "description" : "value-keyword-case"
  } ]
}, {
  "patternId" : "media-feature-name-value-allowed-list",
  "title" : "Specify a list of allowed media feature name and value pairs.",
  "parameters" : [ {
    "name" : "media-feature-name-value-allowed-list",
    "description" : "media-feature-name-value-allowed-list"
  } ]
}, {
  "patternId" : "scss_function-color-channel",
  "title" : "Encourage the use of the color.channel function over related deprecated color functions:",
  "parameters" : [ {
    "name" : "function-color-channel",
    "description" : "function-color-channel"
  } ]
}, {
  "patternId" : "scss_no-unused-private-members",
  "title" : "Disallow unused private members.",
  "parameters" : [ {
    "name" : "no-unused-private-members",
    "description" : "no-unused-private-members"
  } ]
}, {
  "patternId" : "no-descending-specificity",
  "title" : "Disallow selectors of lower specificity from coming after overriding selectors of higher specificity.",
  "parameters" : [ {
    "name" : "no-descending-specificity",
    "description" : "no-descending-specificity"
  } ]
}, {
  "patternId" : "scss_at-function-pattern",
  "title" : "Specify a pattern for Sass/SCSS-like function names.",
  "parameters" : [ {
    "name" : "at-function-pattern",
    "description" : "at-function-pattern"
  } ]
}, {
  "patternId" : "media-feature-name-value-no-unknown",
  "title" : "Disallow unknown values for media features.",
  "parameters" : [ {
    "name" : "media-feature-name-value-no-unknown",
    "description" : "media-feature-name-value-no-unknown"
  } ]
}, {
  "patternId" : "selector-attribute-name-disallowed-list",
  "title" : "Specify a list of disallowed attribute names.",
  "parameters" : [ {
    "name" : "selector-attribute-name-disallowed-list",
    "description" : "selector-attribute-name-disallowed-list"
  } ]
}, {
  "patternId" : "color-function-notation",
  "title" : "Specify modern or legacy notation for color-functions.",
  "parameters" : [ {
    "name" : "color-function-notation",
    "description" : "color-function-notation"
  } ]
}, {
  "patternId" : "no-duplicate-selectors",
  "title" : "Disallow duplicate selectors.",
  "parameters" : [ {
    "name" : "no-duplicate-selectors",
    "description" : "no-duplicate-selectors"
  } ]
}, {
  "patternId" : "declaration-no-important",
  "title" : "Disallow `!important` within declarations.",
  "parameters" : [ {
    "name" : "declaration-no-important",
    "description" : "declaration-no-important"
  } ]
}, {
  "patternId" : "no-outline-none",
  "title" : "Disallow outline clearing.",
  "parameters" : [ {
    "name" : "no-outline-none",
    "description" : "no-outline-none"
  } ]
}, {
  "patternId" : "comment-pattern",
  "title" : "Specify a pattern for comments.",
  "parameters" : [ {
    "name" : "comment-pattern",
    "description" : "comment-pattern"
  } ]
}, {
  "patternId" : "custom-property-pattern",
  "title" : "Specify a pattern for custom properties.",
  "parameters" : [ {
    "name" : "custom-property-pattern",
    "description" : "custom-property-pattern"
  } ]
}, {
  "patternId" : "scss_double-slash-comment-whitespace-inside",
  "title" : "Require or disallow whitespace after the `//` in `//`-comments",
  "parameters" : [ {
    "name" : "double-slash-comment-whitespace-inside",
    "description" : "double-slash-comment-whitespace-inside"
  } ]
}, {
  "patternId" : "selector-pseudo-class-disallowed-list",
  "title" : "Specify a list of disallowed pseudo-class selectors.",
  "parameters" : [ {
    "name" : "selector-pseudo-class-disallowed-list",
    "description" : "selector-pseudo-class-disallowed-list"
  } ]
}, {
  "patternId" : "scss_at-import-partial-extension-blacklist",
  "title" : "Specify a blacklist of disallowed file extensions for partial names in `@import` commands.",
  "parameters" : [ {
    "name" : "at-import-partial-extension-blacklist",
    "description" : "at-import-partial-extension-blacklist"
  } ]
}, {
  "patternId" : "scss_operator-no-unspaced",
  "title" : "Disallow unspaced operators in Sass operations.",
  "parameters" : [ {
    "name" : "operator-no-unspaced",
    "description" : "operator-no-unspaced"
  } ]
}, {
  "patternId" : "font-family-no-duplicate-names",
  "title" : "Disallow duplicate names within font families.",
  "parameters" : [ {
    "name" : "font-family-no-duplicate-names",
    "description" : "font-family-no-duplicate-names"
  } ]
}, {
  "patternId" : "scss_at-import-partial-extension-disallowed-list",
  "title" : "Specify a list of disallowed file extensions for partial names in `@import` commands.",
  "parameters" : [ {
    "name" : "at-import-partial-extension-disallowed-list",
    "description" : "at-import-partial-extension-disallowed-list"
  } ]
}, {
  "patternId" : "function-linear-gradient-no-nonstandard-direction",
  "title" : "Disallow non-standard direction values for linear gradient functions.",
  "parameters" : [ {
    "name" : "function-linear-gradient-no-nonstandard-direction",
    "description" : "function-linear-gradient-no-nonstandard-direction"
  } ]
}, {
  "patternId" : "named-grid-areas-no-invalid",
  "title" : "Disallow invalid named grid areas.",
  "parameters" : [ {
    "name" : "named-grid-areas-no-invalid",
    "description" : "named-grid-areas-no-invalid"
  } ]
}, {
  "patternId" : "at-rule-no-unknown",
  "title" : "Disallow unknown at-rules.",
  "parameters" : [ {
    "name" : "at-rule-no-unknown",
    "description" : "at-rule-no-unknown"
  } ]
}, {
  "patternId" : "declaration-empty-line-before",
  "title" : "Require or disallow an empty line before declarations.",
  "parameters" : [ {
    "name" : "declaration-empty-line-before",
    "description" : "declaration-empty-line-before"
  } ]
}, {
  "patternId" : "selector-max-pseudo-class",
  "title" : "Limit the number of pseudo-classes in a selector.",
  "parameters" : [ {
    "name" : "selector-max-pseudo-class",
    "description" : "selector-max-pseudo-class"
  } ]
}, {
  "patternId" : "alpha-value-notation",
  "title" : "Specify percentage or number notation for alpha-values.",
  "parameters" : [ {
    "name" : "alpha-value-notation",
    "description" : "alpha-value-notation"
  } ]
}, {
  "patternId" : "comment-whitespace-inside",
  "title" : "Require or disallow whitespace on the inside of comment markers.",
  "parameters" : [ {
    "name" : "comment-whitespace-inside",
    "description" : "comment-whitespace-inside"
  } ]
}, {
  "patternId" : "no-unknown-animations",
  "title" : "Disallow unknown animations.",
  "parameters" : [ {
    "name" : "no-unknown-animations",
    "description" : "no-unknown-animations"
  } ]
}, {
  "patternId" : "comment-empty-line-before",
  "title" : "Require or disallow an empty line before comments.",
  "parameters" : [ {
    "name" : "comment-empty-line-before",
    "description" : "comment-empty-line-before"
  } ]
}, {
  "patternId" : "selector-no-vendor-prefix",
  "title" : "Disallow vendor prefixes for selectors.",
  "parameters" : [ {
    "name" : "selector-no-vendor-prefix",
    "description" : "selector-no-vendor-prefix"
  } ]
}, {
  "patternId" : "scss_double-slash-comment-inline",
  "title" : "Require or disallow `//`-comments to be inline comments.",
  "parameters" : [ {
    "name" : "double-slash-comment-inline",
    "description" : "double-slash-comment-inline"
  } ]
}, {
  "patternId" : "scss_percent-placeholder-pattern",
  "title" : "Specify a pattern for `%`-placeholders.",
  "parameters" : [ {
    "name" : "percent-placeholder-pattern",
    "description" : "percent-placeholder-pattern"
  } ]
}, {
  "patternId" : "scss_dollar-variable-no-missing-interpolation",
  "title" : "Disallow Sass variables that are used without interpolation with CSS features that use custom identifiers.",
  "parameters" : [ {
    "name" : "dollar-variable-no-missing-interpolation",
    "description" : "dollar-variable-no-missing-interpolation"
  } ]
}, {
  "patternId" : "selector-combinator-disallowed-list",
  "title" : "Specify a list of disallowed combinators.",
  "parameters" : [ {
    "name" : "selector-combinator-disallowed-list",
    "description" : "selector-combinator-disallowed-list"
  } ]
}, {
  "patternId" : "selector-no-qualifying-type",
  "title" : "Disallow qualifying a selector by type.",
  "parameters" : [ {
    "name" : "selector-no-qualifying-type",
    "description" : "selector-no-qualifying-type"
  } ]
}, {
  "patternId" : "font-weight-notation",
  "title" : "Require numeric or named (where possible) `font-weight` values.",
  "parameters" : [ {
    "name" : "font-weight-notation",
    "description" : "font-weight-notation"
  } ]
}, {
  "patternId" : "declaration-block-no-shorthand-property-overrides",
  "title" : "Disallow shorthand properties that override related longhand properties.",
  "parameters" : [ {
    "name" : "declaration-block-no-shorthand-property-overrides",
    "description" : "declaration-block-no-shorthand-property-overrides"
  } ]
}, {
  "patternId" : "keyframe-selector-notation",
  "title" : "Specify keyword or percentage notation for keyframe selectors.",
  "parameters" : [ {
    "name" : "keyframe-selector-notation",
    "description" : "keyframe-selector-notation"
  } ]
}, {
  "patternId" : "selector-pseudo-element-allowed-list",
  "title" : "Specify a list of allowed pseudo-element selectors.",
  "parameters" : [ {
    "name" : "selector-pseudo-element-allowed-list",
    "description" : "selector-pseudo-element-allowed-list"
  } ]
}, {
  "patternId" : "scss_function-no-unknown",
  "title" : "Disallow unknown functions. Should be used **instead of** Stylelint's function-no-unknown.",
  "parameters" : [ {
    "name" : "function-no-unknown",
    "description" : "function-no-unknown"
  } ]
}, {
  "patternId" : "scss_at-extend-no-missing-placeholder",
  "title" : "Disallow at-extends (`@extend`) with missing placeholders.",
  "parameters" : [ {
    "name" : "at-extend-no-missing-placeholder",
    "description" : "at-extend-no-missing-placeholder"
  } ]
}, {
  "patternId" : "custom-media-pattern",
  "title" : "Specify a pattern for custom media query names.",
  "parameters" : [ {
    "name" : "custom-media-pattern",
    "description" : "custom-media-pattern"
  } ]
}, {
  "patternId" : "media-feature-name-allowed-list",
  "title" : "Specify a list of allowed media feature names.",
  "parameters" : [ {
    "name" : "media-feature-name-allowed-list",
    "description" : "media-feature-name-allowed-list"
  } ]
}, {
  "patternId" : "scss_dollar-variable-colon-space-after",
  "title" : "Require or disallow whitespace after the colon in `$`-variable declarations.",
  "parameters" : [ {
    "name" : "dollar-variable-colon-space-after",
    "description" : "dollar-variable-colon-space-after"
  } ]
}, {
  "patternId" : "selector-max-universal",
  "title" : "Limit the number of universal selectors in a selector.",
  "parameters" : [ {
    "name" : "selector-max-universal",
    "description" : "selector-max-universal"
  } ]
}, {
  "patternId" : "scss_no-duplicate-dollar-variables",
  "title" : "Disallow duplicate dollar variables within a stylesheet.",
  "parameters" : [ {
    "name" : "no-duplicate-dollar-variables",
    "description" : "no-duplicate-dollar-variables"
  } ]
}, {
  "patternId" : "keyframe-block-no-duplicate-selectors",
  "title" : "Disallow duplicate selectors within keyframe blocks.",
  "parameters" : [ {
    "name" : "keyframe-block-no-duplicate-selectors",
    "description" : "keyframe-block-no-duplicate-selectors"
  } ]
}, {
  "patternId" : "scss_at-import-partial-extension-whitelist",
  "title" : "Specify a whitelist of allowed file extensions for partial names in `@import` commands.",
  "parameters" : [ {
    "name" : "at-import-partial-extension-whitelist",
    "description" : "at-import-partial-extension-whitelist"
  } ]
}, {
  "patternId" : "declaration-property-value-allowed-list",
  "title" : "Specify a list of allowed property and value pairs within declarations.",
  "parameters" : [ {
    "name" : "declaration-property-value-allowed-list",
    "description" : "declaration-property-value-allowed-list"
  } ]
}, {
  "patternId" : "selector-pseudo-class-allowed-list",
  "title" : "Specify a list of allowed pseudo-class selectors.",
  "parameters" : [ {
    "name" : "selector-pseudo-class-allowed-list",
    "description" : "selector-pseudo-class-allowed-list"
  } ]
}, {
  "patternId" : "no-obsolete-element",
  "title" : "Disallow obsolete selectors using.",
  "parameters" : [ {
    "name" : "no-obsolete-element",
    "description" : "no-obsolete-element"
  } ]
}, {
  "patternId" : "scss_at-mixin-parentheses-space-before",
  "title" : "Require or disallow a space before `@mixin` parentheses.",
  "parameters" : [ {
    "name" : "at-mixin-parentheses-space-before",
    "description" : "at-mixin-parentheses-space-before"
  } ]
}, {
  "patternId" : "scss_dollar-variable-no-namespaced-assignment",
  "title" : "Disallow assignment to namespaced variables.",
  "parameters" : [ {
    "name" : "dollar-variable-no-namespaced-assignment",
    "description" : "dollar-variable-no-namespaced-assignment"
  } ]
}, {
  "patternId" : "scss_no-dollar-variables",
  "title" : "Disallow dollar variables within a stylesheet.",
  "parameters" : [ {
    "name" : "no-dollar-variables",
    "description" : "no-dollar-variables"
  } ]
}, {
  "patternId" : "scss_at-function-parentheses-space-before",
  "title" : "Require or disallow a space before `@function` parentheses.",
  "parameters" : [ {
    "name" : "at-function-parentheses-space-before",
    "description" : "at-function-parentheses-space-before"
  } ]
}, {
  "patternId" : "scss_comment-no-loud",
  "title" : "Disallow `/*`-comments.",
  "parameters" : [ {
    "name" : "comment-no-loud",
    "description" : "comment-no-loud"
  } ]
}, {
  "patternId" : "declaration-property-unit-allowed-list",
  "title" : "Specify a list of allowed property and unit pairs within declarations.",
  "parameters" : [ {
    "name" : "declaration-property-unit-allowed-list",
    "description" : "declaration-property-unit-allowed-list"
  } ]
}, {
  "patternId" : "unit-no-unknown",
  "title" : "Disallow unknown units.",
  "parameters" : [ {
    "name" : "unit-no-unknown",
    "description" : "unit-no-unknown"
  } ]
}, {
  "patternId" : "annotation-no-unknown",
  "title" : "Disallow unknown annotations.",
  "parameters" : [ {
    "name" : "annotation-no-unknown",
    "description" : "annotation-no-unknown"
  } ]
}, {
  "patternId" : "scss_comment-no-empty",
  "title" : "Disallow empty comments. Should be used **instead of** the Stylelint's comment-no-empty because the core rule ignores SCSS-like comments.",
  "parameters" : [ {
    "name" : "comment-no-empty",
    "description" : "comment-no-empty"
  } ]
}, {
  "patternId" : "scss_dollar-variable-colon-newline-after",
  "title" : "Require a newline after the colon in `$`-variable declarations.",
  "parameters" : [ {
    "name" : "dollar-variable-colon-newline-after",
    "description" : "dollar-variable-colon-newline-after"
  } ]
}, {
  "patternId" : "custom-property-empty-line-before",
  "title" : "Require or disallow an empty line before custom properties.",
  "parameters" : [ {
    "name" : "custom-property-empty-line-before",
    "description" : "custom-property-empty-line-before"
  } ]
}, {
  "patternId" : "scss_dollar-variable-colon-space-before",
  "title" : "Require a single space or disallow whitespace before the colon in `$`-variable declarations.",
  "parameters" : [ {
    "name" : "dollar-variable-colon-space-before",
    "description" : "dollar-variable-colon-space-before"
  } ]
}, {
  "patternId" : "scss_function-disallowed-list",
  "title" : "Specify a list of disallowed functions.",
  "parameters" : [ {
    "name" : "function-disallowed-list",
    "description" : "function-disallowed-list"
  } ]
}, {
  "patternId" : "scss_at-rule-no-unknown",
  "title" : "Disallow unknown at-rules. Should be used **instead of** Stylelint's at-rule-no-unknown.",
  "parameters" : [ {
    "name" : "at-rule-no-unknown",
    "description" : "at-rule-no-unknown"
  } ]
}, {
  "patternId" : "scss_dollar-variable-default",
  "title" : "Require `!default` flag for `$`-variable declarations",
  "parameters" : [ {
    "name" : "dollar-variable-default",
    "description" : "dollar-variable-default"
  } ]
}, {
  "patternId" : "scss_no-duplicate-mixins",
  "title" : "Disallow duplicate mixins within a stylesheet.",
  "parameters" : [ {
    "name" : "no-duplicate-mixins",
    "description" : "no-duplicate-mixins"
  } ]
}, {
  "patternId" : "declaration-block-no-duplicate-properties",
  "title" : "Disallow duplicate properties within declaration blocks.",
  "parameters" : [ {
    "name" : "declaration-block-no-duplicate-properties",
    "description" : "declaration-block-no-duplicate-properties"
  } ]
}, {
  "patternId" : "at-rule-no-vendor-prefix",
  "title" : "Disallow vendor prefixes for at-rules.",
  "parameters" : [ {
    "name" : "at-rule-no-vendor-prefix",
    "description" : "at-rule-no-vendor-prefix"
  } ]
}, {
  "patternId" : "scss_at-rule-conditional-no-parentheses",
  "title" : "Disallow parentheses in conditional @ rules (if, elsif, while)",
  "parameters" : [ {
    "name" : "at-rule-conditional-no-parentheses",
    "description" : "at-rule-conditional-no-parentheses"
  } ]
}, {
  "patternId" : "function-allowed-list",
  "title" : "Specify a list of allowed functions.",
  "parameters" : [ {
    "name" : "function-allowed-list",
    "description" : "function-allowed-list"
  } ]
}, {
  "patternId" : "declaration-property-unit-disallowed-list",
  "title" : "Specify a list of disallowed property and unit pairs within declarations.",
  "parameters" : [ {
    "name" : "declaration-property-unit-disallowed-list",
    "description" : "declaration-property-unit-disallowed-list"
  } ]
}, {
  "patternId" : "color-named",
  "title" : "Require (where possible) or disallow named colors.",
  "parameters" : [ {
    "name" : "color-named",
    "description" : "color-named"
  } ]
}, {
  "patternId" : "selector-not-notation",
  "title" : "Specify simple or complex notation for `:not()` pseudo-class selectors.",
  "parameters" : [ {
    "name" : "selector-not-notation",
    "description" : "selector-not-notation"
  } ]
}, {
  "patternId" : "time-min-milliseconds",
  "title" : "Limit the minimum number of milliseconds for time values.",
  "parameters" : [ {
    "name" : "time-min-milliseconds",
    "description" : "time-min-milliseconds"
  } ]
} ]