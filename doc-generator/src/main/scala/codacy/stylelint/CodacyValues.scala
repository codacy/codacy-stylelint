package codacy.stylelint

object CodacyValues {

  val patternsEnabled = Set(
    "alpha-value-notation",
    "at-rule-allowed-list",
    "at-rule-disallowed-list",
    "at-rule-empty-line-before",
    "at-rule-no-vendor-prefix",
    "at-rule-property-required-list",
    "color-function-notation",
    "color-hex-alpha",
    "color-hex-length",
    "color-named",
    "color-no-hex",
    "comment-empty-line-before",
    "comment-pattern",
    "comment-whitespace-inside",
    "comment-word-disallowed-list",
    "custom-media-pattern",
    "custom-property-empty-line-before",
    "custom-property-pattern",
    "declaration-block-no-redundant-longhand-properties",
    "declaration-block-single-line-max-declarations",
    "declaration-empty-line-before",
    "declaration-no-important",
    "declaration-property-max-values",
    "declaration-property-unit-allowed-list",
    "declaration-property-unit-disallowed-list",
    "declaration-property-value-allowed-list",
    "declaration-property-value-disallowed-list",
    "font-family-name-quotes",
    "font-weight-notation",
    "function-allowed-list",
    "function-disallowed-list",
    "function-name-case",
    "function-url-no-scheme-relative",
    "function-url-quotes",
    "function-url-scheme-allowed-list",
    "function-url-scheme-disallowed-list",
    "hue-degree-notation",
    "import-notation",
    "keyframe-selector-notation",
    "keyframes-name-pattern",
    "length-zero-no-unit",
    "max-nesting-depth",
    "media-feature-name-allowed-list",
    "media-feature-name-disallowed-list",
    "media-feature-name-no-vendor-prefix",
    "media-feature-name-unit-allowed-list",
    "media-feature-name-value-allowed-list",
    "media-feature-range-notation",
    "number-max-precision",
    "property-allowed-list",
    "property-disallowed-list",
    "property-no-vendor-prefix",
    "rule-empty-line-before",
    "rule-selector-property-disallowed-list",
    "selector-attribute-name-disallowed-list",
    "selector-attribute-operator-allowed-list",
    "selector-attribute-operator-disallowed-list",
    "selector-attribute-quotes",
    "selector-class-pattern",
    "selector-combinator-allowed-list",
    "selector-combinator-disallowed-list",
    "selector-disallowed-list",
    "selector-id-pattern",
    "selector-max-attribute",
    "selector-max-class",
    "selector-max-combinators",
    "selector-max-compound-selectors",
    "selector-max-id",
    "selector-max-pseudo-class",
    "selector-max-specificity",
    "selector-max-type",
    "selector-max-universal",
    "selector-nested-pattern",
    "selector-no-qualifying-type",
    "selector-no-vendor-prefix",
    "selector-not-notation",
    "selector-pseudo-class-allowed-list",
    "selector-pseudo-class-disallowed-list",
    "selector-pseudo-element-allowed-list",
    "selector-pseudo-element-colon-notation",
    "selector-pseudo-element-disallowed-list",
    "selector-type-case",
    "shorthand-property-no-redundant-values",
    "time-min-milliseconds",
    "unit-allowed-list",
    "unit-disallowed-list",
    "value-keyword-case",
    "value-no-vendor-prefix")

  //Gathered the rules within the category of "Possible errors" of the tool https://stylelint.io/user-guide/rules/list/#possible-errors
  val possibleErrorsPatterns = Set(
    "annotation-no-unknown",
    "at-rule-no-unknown",
    "block-no-empty",
    "color-no-invalid-hex",
    "comment-no-empty",
    "custom-property-no-missing-var-function",
    "declaration-block-no-duplicate-custom-properties",
    "declaration-block-no-duplicate-properties",
    "declaration-block-no-shorthand-property-overrides",
    "declaration-property-value-no-unknown",
    "font-family-no-duplicate-names",
    "font-family-no-missing-generic-family-keyword",
    "function-calc-no-unspaced-operator",
    "function-linear-gradient-no-nonstandard-direction",
    "function-no-unknown",
    "keyframe-block-no-duplicate-selectors",
    "keyframe-declaration-no-important",
    "media-feature-name-no-unknown",
    "media-feature-name-value-no-unknown",
    "named-grid-areas-no-invalid",
    "no-descending-specificity",
    "no-duplicate-at-import-rules",
    "no-duplicate-selectors",
    "no-empty-source",
    "no-invalid-double-slash-comments",
    "no-invalid-position-at-import-rule",
    "no-irregular-whitespace",
    "no-unknown-animations",
    "no-unknown-custom-properties",
    "property-no-unknown",
    "selector-anb-no-unmatchable",
    "selector-pseudo-class-no-unknown",
    "selector-pseudo-element-no-unknown",
    "selector-type-no-unknown",
    "string-no-newline",
    "unit-no-unknown")
}
